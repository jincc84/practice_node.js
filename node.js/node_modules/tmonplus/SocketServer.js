/**
 * TmonPlus Service Socket Server
 * 
 * @author  
 */

var express = require('express'),
    fs = require('fs');

var TmonPlusSocket = require('tmonplus/TmonPlusSocket');

// uncaught exception
process.on('uncaughtException', function(error) {
    console.log('[Socket Server] uncaughtException\n%s', error.stack);
});

/**
 * Socket Server
 */
var SocketServer = module.exports = function() {
    this._phase = 'real';
    this._port;
    this._conf;
};

/**
 * Set deploy phase
 * 
 * @param {Object} phase
 */
SocketServer.prototype.setPhase = function(phase) {
    if (typeof phase !== 'undefined') {
        this._phase = phase;
        
        if (phase === 'real') {
            this._conf = require('../../config/setup'); 
        } else {
            this._conf = require('../../config/' + phase + '/setup');
        }
    }
};

/**
 * Set port
 * 
 * @param {Object} port
 */
SocketServer.prototype.setPort = function(port) {
    this._port = port;
};

/**
 * Start socket server
 */
SocketServer.prototype.start = function() {
    if (this._conf.isSSL) {
        var options = {
            key: fs.readFileSync(__dirname + '/../../ssl/tmonplus.key_nopass'),
            cert: fs.readFileSync(__dirname + '/../../ssl/service_tmonplus_co_kr.crt'),
            ca: fs.readFileSync(__dirname + '/../../ssl/COMODOHigh-AssuranceSecureServerCA.crt')
        };
        this._server = express.createServer(options);
    } else {
        this._server = express.createServer();    
    }
    
    this._server.listen(this._port);
    
    this._initSocket();
};

SocketServer.prototype._initSocket = function() {
    var socket = new TmonPlusSocket();
    socket.setPhase(this._phase);
    socket.setServer(this._server);
    socket.initSocket();
};