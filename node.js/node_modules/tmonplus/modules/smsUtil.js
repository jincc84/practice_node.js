var http = require('http'), querystring = require('querystring'), mysql = require('mysql');

var CommonUtil = require('tmonplus/modules/commonUtil');

var SmsUtil = module.exports = function(dbConfig) {
    if (dbConfig) {
        this._initDB(dbConfig);
    }
};

SmsUtil.prototype._initDB = function(dbConfig) {
    this._client = mysql.createClient(dbConfig);
};

/**
 *
 * @param {Object} callback
 */
SmsUtil.prototype.endSmsUtil = function(callback) {
    this._client.end(function() {
        callback();
    });
};

/**
 *
 * @param {Object} pTargetPhone
 * @param {Object} pCallbackPhone
 * @param {Object} pSendMessage
 * @param {Object} pSendTime
 * @param {Object} pMessageType
 * @param {Object} pLog
 */
SmsUtil.prototype.sendSMS = function(pTargetPhone, pCallbackPhone, pSendTitle, pSendMessage, pSendTime, pMessageType, pReceptionRefusal, pLog) {
    var to = pTargetPhone;
    var from = pCallbackPhone ? pCallbackPhone : "15661135";
    var msg = pSendMessage ? ('' + pSendMessage).replace(/^\s*|\s*$/g, '') : "";
    var time = pSendTime && pSendTime.length === 14 ? pSendTime : "now";
    var type = pMessageType ? pMessageType : (CommonUtil.byteLength(msg) > 90 ? 'lms' : 'sms');
    var log = pLog ? pLog : {
        "branchNo": -1,
        "contentsType": "ETC",
        "triggerInfo": ""
    };
    var self = this;
    var posts = [];
    
    try {
        posts.log = {
            type: type,
            sendtime: time,
            phone: to,
            callback: from,
            log: log,
            sendmsg: msg,
            result: ""
        };
        
        if (pReceptionRefusal) {
            posts.log.result = 'reception_refusal';
            self.writeLog(posts.log);
        } else {
            var data = {
                site: 'real',
                userkey: 'laksdjflkajsdlfasdfkjasdff',
                passkey: 'qlwkejrwklerjkljadsflakjsd',
                type: type,
                sendtime: time,
                phone: to,
                callback: from,
                flag: 'royalty',
                sendmsg: msg,
                logid: log.branchNo
            };
            
            if (type == 'lms' && pSendTitle) {
                data.subject = pSendTitle;
            }
            
            posts.data = querystring.stringify(data);
            
            posts.option = {
                host: 'admin.tmonplus.co.kr',
                port: '80',
                path: '/api/message/send_post/',
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                    'Content-Length': posts.data.length
                }
            };
            
            posts.request = http.request(posts.option, function(res) {
                res.setEncoding('utf8');
                
                res.on('data', function(chunk) {
                    posts.log.result = chunk;
                    self.writeLog(posts.log);
                    
                    console.log("---------------------------------------------------------------------------------------------------------------------");
                    console.log((new Date()) + ' ::: smsUtil.sendSMS(), customer_phone : ' + posts.log.phone + ', msg : ' + posts.log.sendmsg);
                    console.log("---------------------------------------------------------------------------------------------------------------------");
                });
            });
            
            posts.request.write(posts.data);
            posts.request.end();
        }
    } catch (err) {
        posts.log.result = err.message;
        self.writeLog(posts.log);
    }
};

SmsUtil.prototype.writeLog = function(data) {
    this._client.query('INSERT INTO tb_sms_send_log (branch_no, message_type, contents_type, receiver_phone_no, callback_phone_no, send_result, send_message, send_datetime, create_datetime, trigger_info) VALUES (?, ?, ?, ?, ?, ?, ?, ?, NOW(), ?)', [data.log.branchNo, data.type, data.log.contentsType, data.phone, data.callback, data.result, data.sendmsg, data.sendtime, data.log.triggerInfo], function(error, results) {
        if (error) {
            console.log('[ERR.smsUtil] ' + error);
            console.log([data.log.branchNo, data.type, data.log.contentsType, data.phone, data.callback, data.result, data.sendmsg, data.sendtime, data.log.triggerInfo]);
        }
    });
};
